# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1 

      # make sure that our plugin builds
    - name: Build Project
      run: ./gradlew build

      # build the jars
    - name: Build shadowJars
      run: ./gradlew shadowJar

    - name: Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
       repo_token: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
       automatic_release_tag: "latest"
       prerelease: true
       title: "Development Build"
       files: |
        build/libs/*.jar

    - name: ssh key generate
      run: |
        mkdir -p ~/.ssh/
        ssh-keyscan -H github.com >> ~/.ssh/known_hosts
        echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 755 ~/.ssh/id_rsa

    - name: Deploy
      run: rsync -ahvz -e "ssh -i ~/.ssh/id_rsa -p ${{ secrets.SSH_PORT }} -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_ADDR }}:/opt/ --include-from="build/libs/"